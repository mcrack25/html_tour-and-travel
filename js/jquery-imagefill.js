!function(t){t.fn.imagefill=function(i){function e(){u=0,d=0,o.each(function(){s=t(this).find("img").width()/t(this).find("img").height();var i=t(this).outerWidth(),e=t(this).outerHeight();u+=t(this).outerHeight(),d+=t(this).outerWidth();var h=i/e;h<s?t(this).find("img").css({width:"auto",height:e,top:0,left:-(e*s-i)/2}):t(this).find("img").css({width:i,height:"auto",top:-(i/s-e)/2,left:0})})}function h(){var i=0,n=0;o.each(function(){n+=t(this).outerHeight(),i+=t(this).outerWidth()}),u===n&&d===i||e(),setTimeout(h,a.throttle)}var o=this,n=o.find("img").addClass("loading").css({position:"absolute"}),s=1,u=0,d=0,r={runOnce:!1,throttle:200},a=t.extend({},r,i),c=o.css("position");return o.css({overflow:"hidden",position:"static"===c?"relative":c}),o.each(function(){u+=t(this).outerHeight(),d+=t(this).outerWidth()}),o.imagesLoaded().done(function(t){s=n.width()/n.height(),n.removeClass("loading"),e(),a.runOnce||h()}),this}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS1pbWFnZWZpbGwuanMiXSwibmFtZXMiOlsiJCIsImZuIiwiaW1hZ2VmaWxsIiwib3B0aW9ucyIsImZpdEltYWdlcyIsImNvbnRhaW5lcnNIIiwiY29udGFpbmVyc1ciLCIkY29udGFpbmVyIiwiZWFjaCIsImltYWdlQXNwZWN0IiwidGhpcyIsImZpbmQiLCJ3aWR0aCIsImhlaWdodCIsImNvbnRhaW5lclciLCJvdXRlcldpZHRoIiwiY29udGFpbmVySCIsIm91dGVySGVpZ2h0IiwiY29udGFpbmVyQXNwZWN0IiwiY3NzIiwidG9wIiwibGVmdCIsImNoZWNrU2l6ZUNoYW5nZSIsImNoZWNrVyIsImNoZWNrSCIsInNldFRpbWVvdXQiLCJzZXR0aW5ncyIsInRocm90dGxlIiwiJGltZyIsImFkZENsYXNzIiwicG9zaXRpb24iLCJkZWZhdWx0cyIsInJ1bk9uY2UiLCJleHRlbmQiLCJjb250YWluZXJQb3MiLCJvdmVyZmxvdyIsImltYWdlc0xvYWRlZCIsImRvbmUiLCJpbWciLCJyZW1vdmVDbGFzcyIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkNBcUJHLFNBQVNBLEdBRVZBLEVBQUVDLEdBQUdDLFVBQVksU0FBU0MsR0FpQ3hCLFFBQVNDLEtBQ1BDLEVBQWUsRUFDZkMsRUFBYyxFQUNkQyxFQUFXQyxLQUFLLFdBQ2RDLEVBQWNULEVBQUVVLE1BQU1DLEtBQUssT0FBT0MsUUFBVVosRUFBRVUsTUFBTUMsS0FBSyxPQUFPRSxRQUNoRSxJQUFJQyxHQUFhZCxFQUFFVSxNQUFNSyxhQUNyQkMsRUFBYWhCLEVBQUVVLE1BQU1PLGFBQ3pCWixJQUFlTCxFQUFFVSxNQUFNTyxjQUN2QlgsR0FBZU4sRUFBRVUsTUFBTUssWUFFdkIsSUFBSUcsR0FBa0JKLEVBQVdFLENBQzdCRSxHQUFrQlQsRUFFcEJULEVBQUVVLE1BQU1DLEtBQUssT0FBT1EsS0FDaEJQLE1BQU8sT0FDUEMsT0FBUUcsRUFDUkksSUFBSSxFQUNKQyxPQUFPTCxFQUFXUCxFQUFZSyxHQUFZLElBSTlDZCxFQUFFVSxNQUFNQyxLQUFLLE9BQU9RLEtBQ2hCUCxNQUFPRSxFQUNQRCxPQUFRLE9BQ1JPLE1BQU1OLEVBQVdMLEVBQVlPLEdBQVksRUFDekNLLEtBQUssTUFNZixRQUFTQyxLQUNQLEdBQUlDLEdBQVMsRUFDVEMsRUFBUyxDQUNiakIsR0FBV0MsS0FBSyxXQUNkZ0IsR0FBVXhCLEVBQUVVLE1BQU1PLGNBQ2xCTSxHQUFVdkIsRUFBRVUsTUFBTUssZUFFaEJWLElBQWdCbUIsR0FBVWxCLElBQWdCaUIsR0FDNUNuQixJQUVGcUIsV0FBV0gsRUFBaUJJLEVBQVNDLFVBeEV2QyxHQUFJcEIsR0FBYUcsS0FDYmtCLEVBQU9yQixFQUFXSSxLQUFLLE9BQU9rQixTQUFTLFdBQVdWLEtBQUtXLFNBQVcsYUFDbEVyQixFQUFjLEVBQ2RKLEVBQWMsRUFDZEMsRUFBYyxFQUNkeUIsR0FDRUMsU0FBUyxFQUNUTCxTQUFXLEtBRWJELEVBQVcxQixFQUFFaUMsVUFBV0YsRUFBVTVCLEdBR2xDK0IsRUFBZTNCLEVBQVdZLElBQUksV0ErRGxDLE9BOURBWixHQUFXWSxLQUFLZ0IsU0FBVyxTQUFTTCxTQUE2QixXQUFqQkksRUFBNkIsV0FBYUEsSUFHMUYzQixFQUFXQyxLQUFLLFdBQ2RILEdBQWVMLEVBQUVVLE1BQU1PLGNBQ3ZCWCxHQUFlTixFQUFFVSxNQUFNSyxlQUl6QlIsRUFBVzZCLGVBQWVDLEtBQUssU0FBU0MsR0FDdEM3QixFQUFjbUIsRUFBS2hCLFFBQVVnQixFQUFLZixTQUNsQ2UsRUFBS1csWUFBWSxXQUNqQm5DLElBQ0tzQixFQUFTTSxTQUNaVixNQWdER1osT0FHVDhCIiwiZmlsZSI6ImpxdWVyeS1pbWFnZWZpbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGltYWdlZmlsbC5qc1xuICogQXV0aG9yICYgY29weXJpZ2h0IChjKSAyMDEzOiBKb2huIFBvbGFjZWtcbiAqIGpvaG5wb2xhY2VrLmNvbVxuICogaHR0cHM6Ly90d2l0dGVyLmNvbS9qb2hucG9sYWNla1xuICpcbiAqIER1YWwgTUlUICYgR1BMIGxpY2Vuc2VcbiAqXG4gKiBQcm9qZWN0IFBhZ2U6IGh0dHA6Ly9qb2hucG9sYWNlay5naXRodWIuaW8vaW1hZ2VmaWxsLmpzXG4gKlxuICogVGhlIGpRdWVyeSBwbHVnaW4gZm9yIG1ha2luZyBpbWFnZXMgZmlsbCB0aGVpciBjb250YWluZXJzIChhbmQgYmUgY2VudGVyZWQpXG4gKlxuICogRVhBTVBMRVxuICogR2l2ZW4gdGhpcyBodG1sOlxuICogPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPjxpbWcgc3JjPVwibXlhd2Vzb21laW1hZ2VcIiAvPjwvZGl2PlxuICogJCgnLmNvbnRhaW5lcicpLmltYWdlZmlsbCgpOyAvLyBpbWFnZSBzdHJldGNoZXMgdG8gZmlsbCBjb250YWluZXJcbiAqXG4gKiBSRVFVSVJFUzpcbiAqIGltYWdlc0xvYWRlZCAtIGh0dHBzOi8vZ2l0aHViLmNvbS9kZXNhbmRyby9pbWFnZXNsb2FkZWRcbiAqXG4gKi9cbiA7KGZ1bmN0aW9uKCQpIHtcblxuICAkLmZuLmltYWdlZmlsbCA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcblxuICAgIHZhciAkY29udGFpbmVyID0gdGhpcyxcbiAgICAgICAgJGltZyA9ICRjb250YWluZXIuZmluZCgnaW1nJykuYWRkQ2xhc3MoJ2xvYWRpbmcnKS5jc3Moeydwb3NpdGlvbic6J2Fic29sdXRlJ30pLFxuICAgICAgICBpbWFnZUFzcGVjdCA9IDEvMSxcbiAgICAgICAgY29udGFpbmVyc0ggPSAwLFxuICAgICAgICBjb250YWluZXJzVyA9IDAsXG4gICAgICAgIGRlZmF1bHRzID0ge1xuICAgICAgICAgIHJ1bk9uY2U6IGZhbHNlLFxuICAgICAgICAgIHRocm90dGxlIDogMjAwICAvLyA1ZnBzXG4gICAgICAgIH0sXG4gICAgICAgIHNldHRpbmdzID0gJC5leHRlbmQoe30sIGRlZmF1bHRzLCBvcHRpb25zKTtcblxuICAgIC8vIG1ha2Ugc3VyZSBjb250YWluZXIgaXNuJ3QgcG9zaXRpb246c3RhdGljXG4gICAgdmFyIGNvbnRhaW5lclBvcyA9ICRjb250YWluZXIuY3NzKCdwb3NpdGlvbicpO1xuICAgICRjb250YWluZXIuY3NzKHsnb3ZlcmZsb3cnOidoaWRkZW4nLCdwb3NpdGlvbic6KGNvbnRhaW5lclBvcyA9PT0gJ3N0YXRpYycpID8gJ3JlbGF0aXZlJyA6IGNvbnRhaW5lclBvc30pO1xuXG4gICAgLy8gc2V0IGNvbnRhaW5lckgsIGNvbnRhaW5lcldcbiAgICAkY29udGFpbmVyLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICBjb250YWluZXJzSCArPSAkKHRoaXMpLm91dGVySGVpZ2h0KCk7XG4gICAgICBjb250YWluZXJzVyArPSAkKHRoaXMpLm91dGVyV2lkdGgoKTtcbiAgICB9KTtcblxuICAgIC8vIHdhaXQgZm9yIGltYWdlIHRvIGxvYWQsIHRoZW4gZml0IGl0IGluc2lkZSB0aGUgY29udGFpbmVyXG4gICAgJGNvbnRhaW5lci5pbWFnZXNMb2FkZWQoKS5kb25lKGZ1bmN0aW9uKGltZykge1xuICAgICAgaW1hZ2VBc3BlY3QgPSAkaW1nLndpZHRoKCkgLyAkaW1nLmhlaWdodCgpO1xuICAgICAgJGltZy5yZW1vdmVDbGFzcygnbG9hZGluZycpO1xuICAgICAgZml0SW1hZ2VzKCk7XG4gICAgICBpZiAoIXNldHRpbmdzLnJ1bk9uY2UpIHtcbiAgICAgICAgY2hlY2tTaXplQ2hhbmdlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBmaXRJbWFnZXMoKSB7XG4gICAgICBjb250YWluZXJzSCAgPSAwO1xuICAgICAgY29udGFpbmVyc1cgPSAwO1xuICAgICAgJGNvbnRhaW5lci5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBpbWFnZUFzcGVjdCA9ICQodGhpcykuZmluZCgnaW1nJykud2lkdGgoKSAvICQodGhpcykuZmluZCgnaW1nJykuaGVpZ2h0KCk7XG4gICAgICAgIHZhciBjb250YWluZXJXID0gJCh0aGlzKS5vdXRlcldpZHRoKCksXG4gICAgICAgICAgICBjb250YWluZXJIID0gJCh0aGlzKS5vdXRlckhlaWdodCgpO1xuICAgICAgICBjb250YWluZXJzSCArPSAkKHRoaXMpLm91dGVySGVpZ2h0KCk7XG4gICAgICAgIGNvbnRhaW5lcnNXICs9ICQodGhpcykub3V0ZXJXaWR0aCgpO1xuXG4gICAgICAgIHZhciBjb250YWluZXJBc3BlY3QgPSBjb250YWluZXJXL2NvbnRhaW5lckg7XG4gICAgICAgIGlmIChjb250YWluZXJBc3BlY3QgPCBpbWFnZUFzcGVjdCkge1xuICAgICAgICAgIC8vIHRhbGxlclxuICAgICAgICAgICQodGhpcykuZmluZCgnaW1nJykuY3NzKHtcbiAgICAgICAgICAgICAgd2lkdGg6ICdhdXRvJyxcbiAgICAgICAgICAgICAgaGVpZ2h0OiBjb250YWluZXJILFxuICAgICAgICAgICAgICB0b3A6MCxcbiAgICAgICAgICAgICAgbGVmdDotKGNvbnRhaW5lckgqaW1hZ2VBc3BlY3QtY29udGFpbmVyVykvMlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gd2lkZXJcbiAgICAgICAgICAkKHRoaXMpLmZpbmQoJ2ltZycpLmNzcyh7XG4gICAgICAgICAgICAgIHdpZHRoOiBjb250YWluZXJXLFxuICAgICAgICAgICAgICBoZWlnaHQ6ICdhdXRvJyxcbiAgICAgICAgICAgICAgdG9wOi0oY29udGFpbmVyVy9pbWFnZUFzcGVjdC1jb250YWluZXJIKS8yLFxuICAgICAgICAgICAgICBsZWZ0OjBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjaGVja1NpemVDaGFuZ2UoKSB7XG4gICAgICB2YXIgY2hlY2tXID0gMCxcbiAgICAgICAgICBjaGVja0ggPSAwO1xuICAgICAgJGNvbnRhaW5lci5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBjaGVja0ggKz0gJCh0aGlzKS5vdXRlckhlaWdodCgpO1xuICAgICAgICBjaGVja1cgKz0gJCh0aGlzKS5vdXRlcldpZHRoKCk7XG4gICAgICB9KTtcbiAgICAgIGlmIChjb250YWluZXJzSCAhPT0gY2hlY2tIIHx8IGNvbnRhaW5lcnNXICE9PSBjaGVja1cpIHtcbiAgICAgICAgZml0SW1hZ2VzKCk7XG4gICAgICB9XG4gICAgICBzZXRUaW1lb3V0KGNoZWNrU2l6ZUNoYW5nZSwgc2V0dGluZ3MudGhyb3R0bGUpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxufShqUXVlcnkpKTtcbiJdfQ==
